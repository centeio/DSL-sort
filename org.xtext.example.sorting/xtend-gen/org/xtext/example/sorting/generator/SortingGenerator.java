/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.sorting.generator;

import com.google.common.collect.Iterables;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IterableExtensions;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;
import org.xtext.example.sorting.sorting.Component;
import org.xtext.example.sorting.sorting.Config;
import org.xtext.example.sorting.sorting.Filter;
import org.xtext.example.sorting.sorting.Port;
import org.xtext.example.sorting.sorting.Sink;
import org.xtext.example.sorting.sorting.Source;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class SortingGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    String _className = this.className(resource);
    String _plus = (_className + ".Component.java");
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("public abstract class Component{");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("protected int level = 0;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void invoke();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public Port getPort(String name);");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public int getLevel() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return level;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}\t\t\t\t");
    _builder.newLine();
    _builder.append("}");
    fsa.generateFile(_plus, _builder);
    String _className_1 = this.className(resource);
    String _plus_1 = (_className_1 + ".Source.java");
    StringConcatenation _builder_1 = new StringConcatenation();
    _builder_1.append("import java.util.HashMap;");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("public abstract class Source extends Component{");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("protected HashMap<String, Port> outPorts = new HashMap<String, Port>();");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("Port getPort(String name){return outPorts.get(name);}");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    fsa.generateFile(_plus_1, _builder_1);
    String _className_2 = this.className(resource);
    String _plus_2 = (_className_2 + ".Filter.java");
    StringConcatenation _builder_2 = new StringConcatenation();
    _builder_2.append("import java.util.HashMap;");
    _builder_2.newLine();
    _builder_2.newLine();
    _builder_2.append("public abstract class Filter extends Component{");
    _builder_2.newLine();
    _builder_2.append("\t");
    _builder_2.append("protected HashMap<String, Port> inPorts = new HashMap<String, Port>();");
    _builder_2.newLine();
    _builder_2.append("\t");
    _builder_2.append("protected HashMap<String, Port> outPorts = new HashMap<String, Port>();");
    _builder_2.newLine();
    _builder_2.append("\t");
    _builder_2.append("public Port getPort(String name){");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("if(inPorts.get(name) != null) ");
    _builder_2.newLine();
    _builder_2.append("\t\t\t");
    _builder_2.append("return inPorts.get(name);");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("return outPorts.get(name);");
    _builder_2.newLine();
    _builder_2.append("\t");
    _builder_2.append("}\t\t");
    _builder_2.newLine();
    _builder_2.append("}");
    _builder_2.newLine();
    fsa.generateFile(_plus_2, _builder_2);
    String _className_3 = this.className(resource);
    String _plus_3 = (_className_3 + ".Sink.java");
    StringConcatenation _builder_3 = new StringConcatenation();
    _builder_3.append("import java.util.HashMap;");
    _builder_3.newLine();
    _builder_3.newLine();
    _builder_3.append("public abstract class Sink extends Component{");
    _builder_3.newLine();
    _builder_3.append("\t");
    _builder_3.append("protected HashMap<String, Port> inPorts = new HashMap<String, Port>();");
    _builder_3.newLine();
    _builder_3.append("\t");
    _builder_3.append("public Port getPort(String name){");
    _builder_3.newLine();
    _builder_3.append("\t\t");
    _builder_3.append("return inPorts.get(name);");
    _builder_3.newLine();
    _builder_3.append("\t");
    _builder_3.append("}");
    _builder_3.newLine();
    _builder_3.append("}");
    _builder_3.newLine();
    fsa.generateFile(_plus_3, _builder_3);
    String _className_4 = this.className(resource);
    String _plus_4 = (_className_4 + ".Port.java");
    StringConcatenation _builder_4 = new StringConcatenation();
    _builder_4.append("import java.util.ArrayList;");
    _builder_4.newLine();
    _builder_4.newLine();
    _builder_4.append("public class Port{");
    _builder_4.newLine();
    _builder_4.append("\t");
    _builder_4.append("protected Component component;");
    _builder_4.newLine();
    _builder_4.append("\t");
    _builder_4.append("protected String name;");
    _builder_4.newLine();
    _builder_4.append("\t");
    _builder_4.append("protected ArrayList<Edge> edges = new ArrayList<Edge>();");
    _builder_4.newLine();
    _builder_4.newLine();
    _builder_4.append("\t");
    _builder_4.append("public Port(String name, Component component){");
    _builder_4.newLine();
    _builder_4.append("\t\t");
    _builder_4.append("this.name = name;");
    _builder_4.newLine();
    _builder_4.append("\t\t");
    _builder_4.append("this.component = component;");
    _builder_4.newLine();
    _builder_4.append("\t");
    _builder_4.append("}");
    _builder_4.newLine();
    _builder_4.newLine();
    _builder_4.append("\t");
    _builder_4.append("public Component getComponent() {");
    _builder_4.newLine();
    _builder_4.append("\t\t");
    _builder_4.append("return component;");
    _builder_4.newLine();
    _builder_4.append("\t");
    _builder_4.append("}");
    _builder_4.newLine();
    _builder_4.newLine();
    _builder_4.append("\t");
    _builder_4.append("public void setComponent(Component component) {");
    _builder_4.newLine();
    _builder_4.append("\t\t");
    _builder_4.append("this.component = component;");
    _builder_4.newLine();
    _builder_4.append("\t");
    _builder_4.append("}");
    _builder_4.newLine();
    _builder_4.newLine();
    _builder_4.append("\t");
    _builder_4.append("public String getName() {");
    _builder_4.newLine();
    _builder_4.append("\t\t");
    _builder_4.append("return name;");
    _builder_4.newLine();
    _builder_4.append("\t");
    _builder_4.append("}");
    _builder_4.newLine();
    _builder_4.newLine();
    _builder_4.append("\t");
    _builder_4.append("public void setName(String name) {");
    _builder_4.newLine();
    _builder_4.append("\t\t");
    _builder_4.append("this.name = name;");
    _builder_4.newLine();
    _builder_4.append("\t");
    _builder_4.append("}");
    _builder_4.newLine();
    _builder_4.newLine();
    _builder_4.append("\t");
    _builder_4.append("public ArrayList<Edge> getEdges() {");
    _builder_4.newLine();
    _builder_4.append("\t\t");
    _builder_4.append("return edges;");
    _builder_4.newLine();
    _builder_4.append("\t");
    _builder_4.append("}");
    _builder_4.newLine();
    _builder_4.newLine();
    _builder_4.append("\t");
    _builder_4.append("public void setEdges(ArrayList<Edge> edges) {");
    _builder_4.newLine();
    _builder_4.append("\t\t");
    _builder_4.append("this.edges = edges;");
    _builder_4.newLine();
    _builder_4.append("\t");
    _builder_4.append("}");
    _builder_4.newLine();
    _builder_4.append("}");
    _builder_4.newLine();
    fsa.generateFile(_plus_4, _builder_4);
    String _className_5 = this.className(resource);
    String _plus_5 = (_className_5 + ".Edge.java");
    StringConcatenation _builder_5 = new StringConcatenation();
    _builder_5.append("public class Edge{");
    _builder_5.newLine();
    _builder_5.append("\t");
    _builder_5.append("protected Port source; // <n1.get(p1),n2.get(p2)> ");
    _builder_5.newLine();
    _builder_5.append("\t");
    _builder_5.append("protected Port target;");
    _builder_5.newLine();
    _builder_5.newLine();
    _builder_5.append("\t");
    _builder_5.append("public Edge(Port source, Port target){");
    _builder_5.newLine();
    _builder_5.append("\t\t");
    _builder_5.append("this.source = source;");
    _builder_5.newLine();
    _builder_5.append("\t\t");
    _builder_5.append("this.target = target;");
    _builder_5.newLine();
    _builder_5.append("\t");
    _builder_5.append("}");
    _builder_5.newLine();
    _builder_5.newLine();
    _builder_5.append("\t");
    _builder_5.append("public Port getSource() {");
    _builder_5.newLine();
    _builder_5.append("\t\t");
    _builder_5.append("return source;");
    _builder_5.newLine();
    _builder_5.append("\t");
    _builder_5.append("}");
    _builder_5.newLine();
    _builder_5.newLine();
    _builder_5.append("\t");
    _builder_5.append("public void setSource(Port source) {");
    _builder_5.newLine();
    _builder_5.append("\t\t");
    _builder_5.append("this.source = source;");
    _builder_5.newLine();
    _builder_5.append("\t");
    _builder_5.append("}");
    _builder_5.newLine();
    _builder_5.newLine();
    _builder_5.append("\t");
    _builder_5.append("public Port getTarget() {");
    _builder_5.newLine();
    _builder_5.append("\t\t");
    _builder_5.append("return target;");
    _builder_5.newLine();
    _builder_5.append("\t");
    _builder_5.append("}");
    _builder_5.newLine();
    _builder_5.newLine();
    _builder_5.append("\t");
    _builder_5.append("public void setTarget(Port target) {");
    _builder_5.newLine();
    _builder_5.append("\t\t");
    _builder_5.append("this.target = target;");
    _builder_5.newLine();
    _builder_5.append("\t");
    _builder_5.append("}");
    _builder_5.newLine();
    _builder_5.append("}");
    _builder_5.newLine();
    fsa.generateFile(_plus_5, _builder_5);
    Iterable<Component> _filter = Iterables.<Component>filter(IteratorExtensions.<EObject>toIterable(resource.getAllContents()), Component.class);
    for (final Component component : _filter) {
      {
        String _className_6 = this.className(resource);
        String _name = component.getName();
        String _plus_6 = (_className_6 + _name);
        String _plus_7 = (_plus_6 + ".java");
        StringConcatenation _builder_6 = new StringConcatenation();
        {
          if ((component instanceof Source)) {
            _builder_6.append("public class ");
            String _name_1 = ((Source)component).getName();
            _builder_6.append(_name_1);
            _builder_6.append(" extends Source{");
            _builder_6.newLineIfNotEmpty();
            _builder_6.append("\t");
            _builder_6.append("public ");
            String _name_2 = ((Source)component).getName();
            _builder_6.append(_name_2, "\t");
            _builder_6.append("(String name){");
            _builder_6.newLineIfNotEmpty();
            _builder_6.append("\t\t");
            _builder_6.append("this.name=name;");
            _builder_6.newLine();
            {
              EList<Port> _outPorts = ((Source)component).getOutPorts();
              for(final Port port : _outPorts) {
                _builder_6.append("\t\t");
                _builder_6.append("inPorts.put(");
                String _name_3 = port.getName();
                _builder_6.append(_name_3, "\t\t");
                _builder_6.append(", new Port(");
                String _name_4 = port.getName();
                _builder_6.append(_name_4, "\t\t");
                _builder_6.append(",this));");
                _builder_6.newLineIfNotEmpty();
              }
            }
            _builder_6.append("\t");
            _builder_6.append("}");
            _builder_6.newLine();
            _builder_6.append("}");
            _builder_6.newLine();
          } else {
            if ((component instanceof Filter)) {
              _builder_6.append("public class ");
              String _name_5 = component.getName();
              _builder_6.append(_name_5);
              _builder_6.append(" extends Filter{");
              _builder_6.newLineIfNotEmpty();
              _builder_6.append("\t");
              _builder_6.append("public ");
              String _name_6 = component.getName();
              _builder_6.append(_name_6, "\t");
              _builder_6.append("(String name){");
              _builder_6.newLineIfNotEmpty();
              _builder_6.append("\t\t");
              _builder_6.append("this.name=name;");
              _builder_6.newLine();
              {
                EList<Port> _inPorts = component.getInPorts();
                for(final Port port_1 : _inPorts) {
                  _builder_6.append("\t\t");
                  _builder_6.append("inPorts.put(");
                  String _name_7 = port_1.getName();
                  _builder_6.append(_name_7, "\t\t");
                  _builder_6.append(", new Port(");
                  String _name_8 = port_1.getName();
                  _builder_6.append(_name_8, "\t\t");
                  _builder_6.append(",this));");
                  _builder_6.newLineIfNotEmpty();
                }
              }
              {
                EList<Port> _outPorts_1 = component.getOutPorts();
                for(final Port port_2 : _outPorts_1) {
                  _builder_6.append("\t\t");
                  _builder_6.append("outPorts.put(");
                  String _name_9 = port_2.getName();
                  _builder_6.append(_name_9, "\t\t");
                  _builder_6.append(", new Port(");
                  String _name_10 = port_2.getName();
                  _builder_6.append(_name_10, "\t\t");
                  _builder_6.append(",this));");
                  _builder_6.newLineIfNotEmpty();
                }
              }
              _builder_6.append("\t");
              _builder_6.append("}");
              _builder_6.newLine();
              _builder_6.append("}");
              _builder_6.newLine();
            } else {
              if ((component instanceof Sink)) {
                _builder_6.append("public class ");
                String _name_11 = component.getName();
                _builder_6.append(_name_11);
                _builder_6.append(" extends Sink{");
                _builder_6.newLineIfNotEmpty();
                _builder_6.append("\t");
                _builder_6.append("public ");
                String _name_12 = component.getName();
                _builder_6.append(_name_12, "\t");
                _builder_6.append("(String name){");
                _builder_6.newLineIfNotEmpty();
                _builder_6.append("\t\t");
                _builder_6.append("this.name=name;");
                _builder_6.newLine();
                {
                  EList<Port> _outPorts_2 = component.getOutPorts();
                  for(final Port port_3 : _outPorts_2) {
                    _builder_6.append("\t\t");
                    _builder_6.append("outPorts.put(");
                    String _name_13 = port_3.getName();
                    _builder_6.append(_name_13, "\t\t");
                    _builder_6.append(", new Port(");
                    String _name_14 = port_3.getName();
                    _builder_6.append(_name_14, "\t\t");
                    _builder_6.append(",this));");
                    _builder_6.newLineIfNotEmpty();
                  }
                }
                _builder_6.append("\t");
                _builder_6.append("}\t\t\t\t\t");
                _builder_6.newLine();
                _builder_6.append("}");
                _builder_6.newLine();
              }
            }
          }
        }
        fsa.generateFile(_plus_7, _builder_6);
        String _className_7 = this.className(resource);
        String _plus_8 = (_className_7 + "Graph.java");
        EObject _head = IterableExtensions.<EObject>head(resource.getContents());
        fsa.generateFile(_plus_8, this.generate(((Config) _head)));
      }
    }
  }
  
  public String className(final Resource res) {
    String name = res.getURI().lastSegment();
    return name.substring(0, name.indexOf("."));
  }
  
  public CharSequence generate(final Config config) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field prams is undefined for the type Config"
      + "\nintval cannot be resolved"
      + "\n!= cannot be resolved"
      + "\nname cannot be resolved"
      + "\nintval cannot be resolved"
      + "\nname cannot be resolved"
      + "\nstringval cannot be resolved");
  }
}
